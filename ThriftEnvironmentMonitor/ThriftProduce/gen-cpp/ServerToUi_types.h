/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ServerToUi_TYPES_H
#define ServerToUi_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <functional>
#include <memory>




class MonitorTemps;

typedef struct _MonitorTemps__isset {
  _MonitorTemps__isset() : Temps(false) {}
  bool Temps :1;
} _MonitorTemps__isset;

class MonitorTemps : public virtual ::apache::thrift::TBase {
 public:

  MonitorTemps(const MonitorTemps&);
  MonitorTemps& operator=(const MonitorTemps&);
  MonitorTemps() noexcept {
  }

  virtual ~MonitorTemps() noexcept;
  std::vector<double>  Temps;

  _MonitorTemps__isset __isset;

  void __set_Temps(const std::vector<double> & val);

  bool operator == (const MonitorTemps & rhs) const
  {
    if (!(Temps == rhs.Temps))
      return false;
    return true;
  }
  bool operator != (const MonitorTemps &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MonitorTemps & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot) override;
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const override;

  virtual void printTo(std::ostream& out) const;
};

void swap(MonitorTemps &a, MonitorTemps &b);

std::ostream& operator<<(std::ostream& out, const MonitorTemps& obj);



#endif
